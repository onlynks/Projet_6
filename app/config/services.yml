# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'composer require twig/extensions

    P6\PlatformBundle\DataFixtures\:
            resource: '../../src/P6/PlatformBundle/DataFixtures'
            tags: ['doctrine.fixture.orm']

    P6\UserBundle\DataFixtures\:
                resource: '../../src/P6/UserBundle/DataFixtures'
                tags: ['doctrine.fixture.orm']

    image.uploader:
        class: P6\PlatformBundle\Service\FileUploader
        arguments:
           $targetDir: '%target_directory%'
        public: true

    remove.trick.images:
        class: P6\PlatformBundle\DoctrineListener\TrickRemoveListener
        arguments:
          $ImageEraser: "@delete.image"
        tags:
          - { name: doctrine.event_listener, event: postRemove }

    delete.image:
        class: P6\PlatformBundle\Service\ImageEraser
        arguments:
           $targetDir: '%target_directory%'
        public: true

    IDBuilder:
        class: P6\PlatformBundle\Service\IDBuilder
        public: true

    template.builder:
        class: P6\PlatformBundle\Service\TemplateBuilder
        arguments:
                   $path: '%target_directory%'
        public: true
